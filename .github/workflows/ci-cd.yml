name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [public-participation, civilbot, billbot, agri-insights, tech-blog]
        include:
          - service: public-participation
            language: python
          - service: civilbot
            language: python
          - service: billbot
            language: python
          - service: agri-insights
            language: python
          - service: tech-blog
            language: node

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      if: matrix.language == 'node'
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Python dependencies
      if: matrix.language == 'python'
      run: |
        cd services/${{ matrix.service }}
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Install Node.js dependencies
      if: matrix.language == 'node'
      run: |
        cd services/${{ matrix.service }}
        npm install

    - name: Run Python tests
      if: matrix.language == 'python'
      run: |
        cd services/${{ matrix.service }}
        pytest --cov

    - name: Run Node.js tests
      if: matrix.language == 'node'
      run: |
        cd services/${{ matrix.service }}
        npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [public-participation, civilbot, billbot, agri-insights, tech-blog]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./services/${{ matrix.service }}
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Update EKS kubeconfig
      run: aws eks update-kubeconfig --name saas-cluster

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f infrastructure/k8s/base/
        kubectl apply -f infrastructure/k8s/overlays/production/ 